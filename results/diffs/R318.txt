diff --git a/RefactorTest/RenameCpp11.cpp b/RefactorTest/RenameCpp11.cpp
index 96b65ff..4145caf 100644
--- a/RefactorTest/RenameCpp11.cpp
+++ b/RefactorTest/RenameCpp11.cpp
@@ -293,50 +293,50 @@ unsigned long long operator""_xull2(const char *text)
 
 // #TEST#: R317 Rename xd
 // #TEST#: R318 Rename text
-double operator""_xd(const char *text)
+double operator""_xd(const char *goink)
 {
     const auto is_e = [](char c) { return c == 'e' || c == 'E'; };
     double value = 0.0;
     bool positive = true;
-    if (*text == '-' || *text == '+')
+    if (*goink == '-' || *goink == '+')
     {
-        positive = *text == '+';
-        ++text;
+        positive = *goink == '+';
+        ++goink;
     }
-    while (*text)
+    while (*goink)
     {
-        if (*text == '.' || is_e(*text))
+        if (*goink == '.' || is_e(*goink))
         {
             break;
         }
         value *= 10.0;
-        value += *text - '0';
-        ++text;
+        value += *goink - '0';
+        ++goink;
     }
-    if (*text == '.')
+    if (*goink == '.')
     {
-        ++text;
+        ++goink;
         double fraction = 1.0;
-        while (*text)
+        while (*goink)
         {
-            if (is_e(*text))
+            if (is_e(*goink))
             {
                 break;
             }
             fraction /= 10.0;
-            value += (*text - '0') * fraction;
-            ++text;
+            value += (*goink - '0') * fraction;
+            ++goink;
         }
     }
-    if (is_e(*text))
+    if (is_e(*goink))
     {
-        ++text;
+        ++goink;
         unsigned int exponent = 0;
-        while (*text)
+        while (*goink)
         {
             exponent *= 10U;
-            exponent += *text - '0';
-            ++text;
+            exponent += *goink - '0';
+            ++goink;
         }
         value *= std::pow(10.0, exponent);
     }
