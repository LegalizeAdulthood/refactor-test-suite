diff --git a/RefactorTest/RenameCpp20Constraints.cpp b/RefactorTest/RenameCpp20Constraints.cpp
index 21c29d3..37c2998 100644
--- a/RefactorTest/RenameCpp20Constraints.cpp
+++ b/RefactorTest/RenameCpp20Constraints.cpp
@@ -876,12 +876,12 @@ union ProductUnion1
 // compound constraint on multiple template parameters, disjunction
 // #TEST#: R1378 Rename template parameter T
 // #TEST#: R1379 Rename template parameter U
-template <typename T, typename U = T>
+template <typename T, typename Goink = T>
 // #TEST#: R1382 Rename concept Multiplicable
 // #TEST#: R1381 Rename first use of T
 // #TEST#: R1383 Rename second use of T
 // #TEST#: R1384 Rename use of U
-    requires std::is_arithmetic_v<T> || Multiplicable<T, U>
+    requires std::is_arithmetic_v<T> || Multiplicable<T, Goink>
 class Product2
 {
 public:
@@ -891,7 +891,7 @@ public:
     // #TEST#: R1388 Rename parameter rhs
     // #TEST#: R1389 Rename first use of lhs
     // #TEST#: R1390 Rename first use of rhs
-    auto operator()(T lhs, U rhs) const -> decltype(lhs * rhs)
+    auto operator()(T lhs, Goink rhs) const -> decltype(lhs * rhs)
     {
         // #TEST#: R1391 Rename lhs
         // #TEST#: R1392 Rename rhs

