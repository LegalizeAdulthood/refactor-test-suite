diff --git a/RefactorTest/RenameCpp20Constraints.cpp b/RefactorTest/RenameCpp20Constraints.cpp
index 024d6a2..2ca8006 100644
--- a/RefactorTest/RenameCpp20Constraints.cpp
+++ b/RefactorTest/RenameCpp20Constraints.cpp
@@ -253,7 +253,7 @@ template <typename T, typename U = T>
 // #TEST#: R1108 Rename parameter rhs
 // #TEST#: R1109 Rename use of lhs
 // #TEST#: R1110 Rename use of rhs
-auto product2(T lhs, U rhs) -> decltype(lhs * rhs)
+auto goink(T lhs, U rhs) -> decltype(lhs * rhs)
     // #TEST#: R1111 Rename concept Multiplicable
     // #TEST#: R1112 Rename use of T
     // #TEST#: R1113 Rename use of U
@@ -531,12 +531,12 @@ void f1()
     // multiple template parameter function with simple constraint on function
     {
         // #TEST#: R1237 Rename function product2
-        REQUIRE_EQUAL(6.0, product2(2, 3.0));
+        REQUIRE_EQUAL(6.0, goink(2, 3.0));
         // #TEST#: R1238 Rename function product2
-        const double d = product2(2.0, 3.0);
+        const double d = goink(2.0, 3.0);
         REQUIRE_EQUAL(6.0, d);
         // #TEST#: R1239 Rename function product2
-        const Rope r = product2(Rope{"two"}, Rope{"three"});
+        const Rope r = goink(Rope{"two"}, Rope{"three"});
         REQUIRE_EQUAL(Rope{"two three"}, r);
     }
     // multiple template parameter function with disjunctive constraint on template parameters

