diff --git a/RefactorTest/RenameCpp20Constraints.cpp b/RefactorTest/RenameCpp20Constraints.cpp
index 024d6a2..933bc06 100644
--- a/RefactorTest/RenameCpp20Constraints.cpp
+++ b/RefactorTest/RenameCpp20Constraints.cpp
@@ -659,7 +659,7 @@ template <typename T>
 // #TEST#: R1271 Rename use of T
     requires std::is_arithmetic_v<T> || Squareable<T>
 // #TEST#: R1272 Rename class Sqr2
-class Sqr2
+class Goink
 {
 public:
     // #TEST#: R1273 Rename first use of T
@@ -1158,14 +1158,14 @@ void f2()
     // compound constraint on single template parameter, disjunction
     {
         // #TEST#: R1500 Rename Sqr2
-        Sqr2<int> s1;
+        Goink<int> s1;
         REQUIRE_EQUAL(4, s1(2));
         // #TEST#: R1501 Rename Sqr2
-        Sqr2<double> s2;
+        Goink<double> s2;
         const double d = s2(2.0);
         REQUIRE_EQUAL(4.0, d);
         // #TEST#: R1502 Rename Sqr2
-        Sqr2<Rope> s3;
+        Goink<Rope> s3;
         const Rope r = s3(Rope{"square"});
         REQUIRE_EQUAL(Rope{"square square"}, r);
     }

