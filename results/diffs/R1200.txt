diff --git a/RefactorTest/RenameCpp20Constraints.cpp b/RefactorTest/RenameCpp20Constraints.cpp
index 024d6a2..f9e644c 100644
--- a/RefactorTest/RenameCpp20Constraints.cpp
+++ b/RefactorTest/RenameCpp20Constraints.cpp
@@ -397,7 +397,7 @@ template <typename T, typename U = T>
 // #TEST#: R1204 Rename parameter rhs
 // #TEST#: R1205 Rename use of lhs
 // #TEST#: R1206 Rename use of rhs
-auto product8(T lhs, U rhs) -> decltype(lhs * rhs)
+auto goink(T lhs, U rhs) -> decltype(lhs * rhs)
     // #TEST#: R1207 Rename first use of T
     // #TEST#: R1208 Rename first use of U
     // #TEST#: R1209 Rename concept Multiplicable
@@ -592,12 +592,12 @@ void f1()
     // multiple template parameter function with combined constraint on function
     {
         // #TEST#: R1253 Rename function product8
-        REQUIRE_EQUAL(6.0, product8(2, 3.0));
+        REQUIRE_EQUAL(6.0, goink(2, 3.0));
         // #TEST#: R1254 Rename function product8
-        const double d = product8(2.0, 3.0);
+        const double d = goink(2.0, 3.0);
         REQUIRE_EQUAL(6.0, d);
         // #TEST#: R1255 Rename function product8
-        const Rope r = product8(Rope{"two"}, Rope{"three"});
+        const Rope r = goink(Rope{"two"}, Rope{"three"});
         REQUIRE_EQUAL(Rope{"two three"}, r);
     }
 }

