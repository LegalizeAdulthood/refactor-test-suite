diff --git a/RefactorTest/RenameCpp20Constraints.cpp b/RefactorTest/RenameCpp20Constraints.cpp
index 024d6a2..b8de295 100644
--- a/RefactorTest/RenameCpp20Constraints.cpp
+++ b/RefactorTest/RenameCpp20Constraints.cpp
@@ -98,7 +98,7 @@ template <typename T>
 // #TEST#: R1017 Rename function square2
 // #TEST#: R1018 Rename second use of T
 // #TEST#: R1019 Rename parameter value
-T square2(T value)
+T goink(T value)
     // #TEST#: R1020 Rename concept Squareable
     // #TEST#: R1021 Rename use of T
     requires Squareable<T>
@@ -450,12 +450,12 @@ void f1()
     // single template parameter function with simple constraint on function
     {
         // #TEST#: R1217 Rename function square2
-        REQUIRE_EQUAL(4, square2(2));
+        REQUIRE_EQUAL(4, goink(2));
         // #TEST#: R1218 Rename function square2
-        const double d = square2(2.0);
+        const double d = goink(2.0);
         REQUIRE_EQUAL(4.0, d);
         // #TEST#: R1219 Rename function square2
-        const Rope r = square2(Rope{"square"});
+        const Rope r = goink(Rope{"square"});
         REQUIRE_EQUAL(Rope{"square square"}, r);
     }
     // single template parameter function with disjunctive constraint on template parameter

