diff --git a/RefactorTest/RenameCpp20Constraints.cpp b/RefactorTest/RenameCpp20Constraints.cpp
index 024d6a2..5328eef 100644
--- a/RefactorTest/RenameCpp20Constraints.cpp
+++ b/RefactorTest/RenameCpp20Constraints.cpp
@@ -50,7 +50,7 @@ template <typename T>
 // #TEST#: R989 Rename concept Squareable
 // #TEST#: R990 Rename use of T
 // #TEST#: R991 Rename parameter lhs
-concept Squareable = requires(T lhs)
+concept Goink = requires(T lhs)
 {
     // #TEST#: R992 Rename first use of lhs
     // #TEST#: R993 Rename second use of lhs
@@ -79,7 +79,7 @@ concept Multiplicable = requires(T lhs, U rhs)
 template <typename T>
 // #TEST#: R1004 Rename concept Squareable
 // #TEST#: R1005 Rename use of T
-    requires Squareable<T>
+    requires Goink<T>
 // #TEST#: R1006 Rename first use of T
 // #TEST#: R1007 Rename function square1
 // #TEST#: R1008 Rename second use of T
@@ -101,7 +101,7 @@ template <typename T>
 T square2(T value)
     // #TEST#: R1017 Rename concept Squareable
     // #TEST#: R1018 Rename use of T
-    requires Squareable<T>
+    requires Goink<T>
 {
     // #TEST#: R1019 Rename first use of value
     // #TEST#: R1020 Rename second use of value
@@ -114,7 +114,7 @@ template <typename T>
 // #TEST#: R1022 Rename first use of T
 // #TEST#: R1023 Rename concept Squareable
 // #TEST#: R1024 Rename second use of T
-    requires std::is_arithmetic_v<T> || Squareable<T>
+    requires std::is_arithmetic_v<T> || Goink<T>
 // #TEST#: R1025 Rename first use of T
 // #TEST#: R1026 Rename function square3
 // #TEST#: R1027 Rename second use of T
@@ -132,7 +132,7 @@ template <typename T>
 // #TEST#: R1032 Rename first use of T
 // #TEST#: R1033 Rename concept Squareable
 // #TEST#: R1034 Rename second use of T
-    requires std::is_arithmetic_v<T> && Squareable<T>
+    requires std::is_arithmetic_v<T> && Goink<T>
 // #TEST#: R1035 Rename first use of T
 // #TEST#: R1036 Rename function square4
 // #TEST#: R1037 Rename second use of T
@@ -155,7 +155,7 @@ T square5(T value)
     // #TEST#: R1046 Rename first use of T
     // #TEST#: R1047 Rename concept Squareable
     // #TEST#: R1048 Rename second use of T
-    requires std::is_arithmetic_v<T> || Squareable<T>
+    requires std::is_arithmetic_v<T> || Goink<T>
 {
     // #TEST#: R1049 Rename first use of value
     // #TEST#: R1050 Rename second use of value
@@ -173,7 +173,7 @@ T square6(T value)
     // #TEST#: R1056 Rename first use of T
     // #TEST#: R1057 Rename concept Squareable
     // #TEST#: R1058 Rename second use of T
-    requires std::is_arithmetic_v<T> && Squareable<T>
+    requires std::is_arithmetic_v<T> && Goink<T>
 {
     // #TEST#: R1059 Rename first use of value
     // #TEST#: R1060 Rename second use of value
@@ -187,7 +187,7 @@ template <typename T>
 // #TEST#: R1063 Rename second use of T
 // #TEST#: R1064 Rename concept Squareable
 // #TEST#: R1065 Rename third use of T
-    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Squareable<T>
+    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Goink<T>
 // #TEST#: R1066 Rename first use of T
 // #TEST#: R1067 Rename function square7
 // #TEST#: R1068 Rename second use of T
@@ -211,7 +211,7 @@ T square8(T value)
     // #TEST#: R1078 Rename second use of T
     // #TEST#: R1079 Rename concept Squareable
     // #TEST#: R1080 Rename third use of T
-    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Squareable<T>
+    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Goink<T>
 {
     // #TEST#: R1081 Rename first use of value
     // #TEST#: R1082 Rename second use of value
@@ -607,7 +607,7 @@ void f1()
 template <typename T>
 // #TEST#: R1254 Rename concept Squareable
 // #TEST#: R1255 Rename use of T
-    requires Squareable<T>
+    requires Goink<T>
 // #TEST#: R1256 Rename class Sqr1
 class Sqr1
 {
@@ -624,7 +624,7 @@ public:
 template <typename T>
 // #TEST#: R1260 Rename concept Squareable
 // #TEST#: R1261 Rename use of T
-    requires Squareable<T>
+    requires Goink<T>
 // #TEST#: R1262 Rename class SqrStruct1
 struct SqrStruct1
 {
@@ -640,7 +640,7 @@ struct SqrStruct1
 template <typename T>
 // #TEST#: R1266 Rename concept Squareable
 // #TEST#: R1267 Rename use of T
-    requires Squareable<T>
+    requires Goink<T>
 // #TEST#: R1268 Rename class SqrUnion1
 union SqrUnion1
 {
@@ -657,7 +657,7 @@ union SqrUnion1
 template <typename T>
 // #TEST#: R1273 Rename concept Squareable
 // #TEST#: R1274 Rename use of T
-    requires std::is_arithmetic_v<T> || Squareable<T>
+    requires std::is_arithmetic_v<T> || Goink<T>
 // #TEST#: R1275 Rename class Sqr2
 class Sqr2
 {
@@ -674,7 +674,7 @@ public:
 template <typename T>
 // #TEST#: R1280 Rename concept Squareable
 // #TEST#: R1281 Rename use of T
-    requires std::is_arithmetic_v<T> || Squareable<T>
+    requires std::is_arithmetic_v<T> || Goink<T>
 // #TEST#: R1282 Rename class SqrStruct2
 struct SqrStruct2
 {
@@ -690,7 +690,7 @@ struct SqrStruct2
 template <typename T>
 // #TEST#: R1287 Rename concept Squareable
 // #TEST#: R1288 Rename use of T
-    requires std::is_arithmetic_v<T> || Squareable<T>
+    requires std::is_arithmetic_v<T> || Goink<T>
 // #TEST#: R1289 Rename class SqrUnion2
 union SqrUnion2
 {
@@ -707,7 +707,7 @@ union SqrUnion2
 template <typename T>
 // #TEST#: R1294 Rename concept Squareable
 // #TEST#: R1295 Rename use of T
-    requires std::is_arithmetic_v<T> && Squareable<T>
+    requires std::is_arithmetic_v<T> && Goink<T>
 // #TEST#: R1296 Rename class Sqr3
 class Sqr3
 {
@@ -724,7 +724,7 @@ public:
 template <typename T>
 // #TEST#: R1301 Rename concept Squareable
 // #TEST#: R1302 Rename use of T
-    requires std::is_arithmetic_v<T> && Squareable<T>
+    requires std::is_arithmetic_v<T> && Goink<T>
 // #TEST#: R1303 Rename class SqrStruct3
 struct SqrStruct3
 {
@@ -740,7 +740,7 @@ struct SqrStruct3
 template <typename T>
 // #TEST#: R1308 Rename concept Squareable
 // #TEST#: R1309 Rename use of T
-    requires std::is_arithmetic_v<T> && Squareable<T>
+    requires std::is_arithmetic_v<T> && Goink<T>
 // #TEST#: R1310 Rename class SqrUnion3
 union SqrUnion3
 {
@@ -757,7 +757,7 @@ union SqrUnion3
 template <typename T>
 // #TEST#: R1316 Rename concept Squareable
 // #TEST#: R1317 Rename use of T
-    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Squareable<T>
+    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Goink<T>
 // #TEST#: R1318 Rename class Sqr4
 class Sqr4
 {
@@ -774,7 +774,7 @@ public:
 template <typename T>
 // #TEST#: R1324 Rename concept Squareable
 // #TEST#: R1325 Rename use of T
-    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Squareable<T>
+    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Goink<T>
 // #TEST#: R1326 Rename class SqrStruct4
 struct SqrStruct4
 {
@@ -790,7 +790,7 @@ struct SqrStruct4
 template <typename T>
 // #TEST#: R1332 Rename concept Squareable
 // #TEST#: R1333 Rename use of T
-    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Squareable<T>
+    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Goink<T>
 // #TEST#: R1334 Rename class SqrUnion4
 union SqrUnion4
 {
