diff --git a/RefactorTest/RenameCpp20Constraints.cpp b/RefactorTest/RenameCpp20Constraints.cpp
index 024d6a2..5328eef 100644
--- a/RefactorTest/RenameCpp20Constraints.cpp
+++ b/RefactorTest/RenameCpp20Constraints.cpp
@@ -50,7 +50,7 @@ template <typename T>
 // #TEST#: R992 Rename concept Squareable
 // #TEST#: R993 Rename use of T
 // #TEST#: R994 Rename parameter lhs
-concept Squareable = requires(T lhs)
+concept Goink = requires(T lhs)
 {
     // #TEST#: R995 Rename first use of lhs
     // #TEST#: R996 Rename second use of lhs
@@ -79,7 +79,7 @@ concept Multiplicable = requires(T lhs, U rhs)
 template <typename T>
 // #TEST#: R1007 Rename concept Squareable
 // #TEST#: R1008 Rename use of T
-    requires Squareable<T>
+    requires Goink<T>
 // #TEST#: R1009 Rename first use of T
 // #TEST#: R1010 Rename function square1
 // #TEST#: R1011 Rename second use of T
@@ -101,7 +101,7 @@ template <typename T>
 T square2(T value)
     // #TEST#: R1020 Rename concept Squareable
     // #TEST#: R1021 Rename use of T
-    requires Squareable<T>
+    requires Goink<T>
 {
     // #TEST#: R1022 Rename first use of value
     // #TEST#: R1023 Rename second use of value
@@ -114,7 +114,7 @@ template <typename T>
 // #TEST#: R1025 Rename first use of T
 // #TEST#: R1026 Rename concept Squareable
 // #TEST#: R1027 Rename second use of T
-    requires std::is_arithmetic_v<T> || Squareable<T>
+    requires std::is_arithmetic_v<T> || Goink<T>
 // #TEST#: R1028 Rename first use of T
 // #TEST#: R1029 Rename function square3
 // #TEST#: R1030 Rename second use of T
@@ -132,7 +132,7 @@ template <typename T>
 // #TEST#: R1035 Rename first use of T
 // #TEST#: R1036 Rename concept Squareable
 // #TEST#: R1037 Rename second use of T
-    requires std::is_arithmetic_v<T> && Squareable<T>
+    requires std::is_arithmetic_v<T> && Goink<T>
 // #TEST#: R1038 Rename first use of T
 // #TEST#: R1039 Rename function square4
 // #TEST#: R1040 Rename second use of T
@@ -155,7 +155,7 @@ T square5(T value)
     // #TEST#: R1049 Rename first use of T
     // #TEST#: R1050 Rename concept Squareable
     // #TEST#: R1051 Rename second use of T
-    requires std::is_arithmetic_v<T> || Squareable<T>
+    requires std::is_arithmetic_v<T> || Goink<T>
 {
     // #TEST#: R1052 Rename first use of value
     // #TEST#: R1053 Rename second use of value
@@ -173,7 +173,7 @@ T square6(T value)
     // #TEST#: R1059 Rename first use of T
     // #TEST#: R1060 Rename concept Squareable
     // #TEST#: R1061 Rename second use of T
-    requires std::is_arithmetic_v<T> && Squareable<T>
+    requires std::is_arithmetic_v<T> && Goink<T>
 {
     // #TEST#: R1062 Rename first use of value
     // #TEST#: R1063 Rename second use of value
@@ -187,7 +187,7 @@ template <typename T>
 // #TEST#: R1066 Rename second use of T
 // #TEST#: R1067 Rename concept Squareable
 // #TEST#: R1068 Rename third use of T
-    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Squareable<T>
+    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Goink<T>
 // #TEST#: R1069 Rename first use of T
 // #TEST#: R1070 Rename function square7
 // #TEST#: R1071 Rename second use of T
@@ -211,7 +211,7 @@ T square8(T value)
     // #TEST#: R1081 Rename second use of T
     // #TEST#: R1082 Rename concept Squareable
     // #TEST#: R1083 Rename third use of T
-    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Squareable<T>
+    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Goink<T>
 {
     // #TEST#: R1084 Rename first use of value
     // #TEST#: R1085 Rename second use of value
@@ -607,7 +607,7 @@ void f1()
 template <typename T>
 // #TEST#: R1257 Rename concept Squareable
 // #TEST#: R1258 Rename use of T
-    requires Squareable<T>
+    requires Goink<T>
 // #TEST#: R1259 Rename class Sqr1
 class Sqr1
 {
@@ -624,7 +624,7 @@ public:
 template <typename T>
 // #TEST#: R1263 Rename concept Squareable
 // #TEST#: R1264 Rename use of T
-    requires Squareable<T>
+    requires Goink<T>
 // #TEST#: R1265 Rename class SqrStruct1
 struct SqrStruct1
 {
@@ -640,7 +640,7 @@ struct SqrStruct1
 template <typename T>
 // #TEST#: R1269 Rename concept Squareable
 // #TEST#: R1270 Rename use of T
-    requires Squareable<T>
+    requires Goink<T>
 // #TEST#: R1271 Rename class SqrUnion1
 union SqrUnion1
 {
@@ -657,7 +657,7 @@ union SqrUnion1
 template <typename T>
 // #TEST#: R1276 Rename concept Squareable
 // #TEST#: R1277 Rename use of T
-    requires std::is_arithmetic_v<T> || Squareable<T>
+    requires std::is_arithmetic_v<T> || Goink<T>
 // #TEST#: R1278 Rename class Sqr2
 class Sqr2
 {
@@ -674,7 +674,7 @@ public:
 template <typename T>
 // #TEST#: R1283 Rename concept Squareable
 // #TEST#: R1284 Rename use of T
-    requires std::is_arithmetic_v<T> || Squareable<T>
+    requires std::is_arithmetic_v<T> || Goink<T>
 // #TEST#: R1285 Rename class SqrStruct2
 struct SqrStruct2
 {
@@ -690,7 +690,7 @@ struct SqrStruct2
 template <typename T>
 // #TEST#: R1290 Rename concept Squareable
 // #TEST#: R1291 Rename use of T
-    requires std::is_arithmetic_v<T> || Squareable<T>
+    requires std::is_arithmetic_v<T> || Goink<T>
 // #TEST#: R1292 Rename class SqrUnion2
 union SqrUnion2
 {
@@ -707,7 +707,7 @@ union SqrUnion2
 template <typename T>
 // #TEST#: R1297 Rename concept Squareable
 // #TEST#: R1298 Rename use of T
-    requires std::is_arithmetic_v<T> && Squareable<T>
+    requires std::is_arithmetic_v<T> && Goink<T>
 // #TEST#: R1299 Rename class Sqr3
 class Sqr3
 {
@@ -724,7 +724,7 @@ public:
 template <typename T>
 // #TEST#: R1304 Rename concept Squareable
 // #TEST#: R1305 Rename use of T
-    requires std::is_arithmetic_v<T> && Squareable<T>
+    requires std::is_arithmetic_v<T> && Goink<T>
 // #TEST#: R1306 Rename class SqrStruct3
 struct SqrStruct3
 {
@@ -740,7 +740,7 @@ struct SqrStruct3
 template <typename T>
 // #TEST#: R1311 Rename concept Squareable
 // #TEST#: R1312 Rename use of T
-    requires std::is_arithmetic_v<T> && Squareable<T>
+    requires std::is_arithmetic_v<T> && Goink<T>
 // #TEST#: R1313 Rename class SqrUnion3
 union SqrUnion3
 {
@@ -757,7 +757,7 @@ union SqrUnion3
 template <typename T>
 // #TEST#: R1319 Rename concept Squareable
 // #TEST#: R1320 Rename use of T
-    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Squareable<T>
+    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Goink<T>
 // #TEST#: R1321 Rename class Sqr4
 class Sqr4
 {
@@ -774,7 +774,7 @@ public:
 template <typename T>
 // #TEST#: R1327 Rename concept Squareable
 // #TEST#: R1328 Rename use of T
-    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Squareable<T>
+    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Goink<T>
 // #TEST#: R1329 Rename class SqrStruct4
 struct SqrStruct4
 {
@@ -790,7 +790,7 @@ struct SqrStruct4
 template <typename T>
 // #TEST#: R1335 Rename concept Squareable
 // #TEST#: R1336 Rename use of T
-    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Squareable<T>
+    requires(std::is_integral_v<T> || std::is_floating_point_v<T>) && Goink<T>
 // #TEST#: R1337 Rename class SqrUnion4
 union SqrUnion4
 {

