diff --git a/RefactorTest/RenameCpp20Constraints.cpp b/RefactorTest/RenameCpp20Constraints.cpp
index 977575b..f63d41b 100644
--- a/RefactorTest/RenameCpp20Constraints.cpp
+++ b/RefactorTest/RenameCpp20Constraints.cpp
@@ -300,7 +300,7 @@ template <typename T, typename U = T>
 // #TEST#: R1139 Rename parameter rhs
 // #TEST#: R1140 Rename use of lhs
 // #TEST#: R1141 Rename use of rhs
-auto product4(T lhs, U rhs) -> decltype(lhs * rhs)
+auto goink(T lhs, U rhs) -> decltype(lhs * rhs)
     // #TEST#: R1142 Rename first use of T
     // #TEST#: R1143 Rename concept Multiplicable
     // #TEST#: R1144 Rename second use of T
@@ -553,12 +553,12 @@ void f1()
     // multiple template parameter function with disjunctive constraint on function
     {
         // #TEST#: R1243 Rename function product4
-        REQUIRE_EQUAL(6.0, product4(2, 3.0));
+        REQUIRE_EQUAL(6.0, goink(2, 3.0));
         // #TEST#: R1244 Rename function product4
-        const double d = product4(2.0, 3.0);
+        const double d = goink(2.0, 3.0);
         REQUIRE_EQUAL(6.0, d);
         // #TEST#: R1245 Rename function product4
-        const Rope r = product4(Rope{"two"}, Rope{"three"});
+        const Rope r = goink(Rope{"two"}, Rope{"three"});
         REQUIRE_EQUAL(Rope{"two three"}, r);
     }
     // multiple template parameter function with conjunctive constraint on template parameters

