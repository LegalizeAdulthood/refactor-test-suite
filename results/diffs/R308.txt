diff --git a/RefactorTest/RenameCpp11.cpp b/RefactorTest/RenameCpp11.cpp
index e73e1db..996d2d5 100644
--- a/RefactorTest/RenameCpp11.cpp
+++ b/RefactorTest/RenameCpp11.cpp
@@ -747,11 +747,11 @@ void f25()
 void f26()
 {
     // #TEST#: R293 Rename x
-    int x = 10;
+    int goink = 10;
     // #TEST#: R294 Rename x in lambda parameter list
     // #TEST#: R295 Rename x in lambda body
     // #TEST#: R296 Rename x in lambda argument list
-    require_equal(100, [](int x) { return x * 10; }(x));
+    require_equal(100, [](int x) { return x * 10; }(goink));
 
     // #TEST#: R297 Rename f
     double f = 20.5;
@@ -760,18 +760,18 @@ void f26()
     // #TEST#: R300 Rename x in lambda body
     // #TEST#: R301 Rename f in lambda body
     // #TEST#: R302 Rename x in lambda argument list
-    require_equal(205.0, [f](int x) { return x * f; }(x));
+    require_equal(205.0, [f](int x) { return x * f; }(goink));
 
     // #TEST#: R303 Rename x in lambda parameter list
     // #TEST#: R304 Rename x in lambda body
     // #TEST#: R305 Rename f in lambda body
     // #TEST#: R306 Rename x in lambda argument list
-    require_equal(205.0, [=](int x) { return x * f; }(x));
+    require_equal(205.0, [=](int x) { return x * f; }(goink));
 
     // #TEST#: R307 Rename x in lambda capture list
     // #TEST#: R308 Rename x in lambda body
-    require_equal(1, [&x] { return x /= 10; }());
-    require_equal(1, x);
+    require_equal(1, [&goink] { return goink /= 10; }());
+    require_equal(1, goink);
 
     // #TEST#: R309 Rename f in lambda body
     require_equal(205.0, [&] { return f *= 10.0; }());
